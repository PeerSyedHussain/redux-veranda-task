[{"/home/hussain/Documents/redux-veranda-task/src/index.js":"1","/home/hussain/Documents/redux-veranda-task/src/App.js":"2","/home/hussain/Documents/redux-veranda-task/src/reportWebVitals.js":"3","/home/hussain/Documents/redux-veranda-task/src/redux/index.js":"4","/home/hussain/Documents/redux-veranda-task/src/redux/course/courseAction.js":"5","/home/hussain/Documents/redux-veranda-task/src/redux/course/courseType.js":"6","/home/hussain/Documents/redux-veranda-task/src/redux/store.js":"7","/home/hussain/Documents/redux-veranda-task/src/redux/rootReducer.js":"8","/home/hussain/Documents/redux-veranda-task/src/redux/course/courseReducer.js":"9","/home/hussain/Documents/redux-veranda-task/src/AddCourse.js":"10"},{"size":942,"mtime":1607592379901,"results":"11","hashOfConfig":"12"},{"size":35980,"mtime":1607607791741,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1607581955547,"results":"14","hashOfConfig":"12"},{"size":37,"mtime":1607592762397,"results":"15","hashOfConfig":"12"},{"size":313,"mtime":1607603382562,"results":"16","hashOfConfig":"12"},{"size":74,"mtime":1607592469864,"results":"17","hashOfConfig":"12"},{"size":357,"mtime":1607586922113,"results":"18","hashOfConfig":"12"},{"size":189,"mtime":1607586993589,"results":"19","hashOfConfig":"12"},{"size":10353,"mtime":1607603728150,"results":"20","hashOfConfig":"12"},{"size":15285,"mtime":1607602782246,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xvl0fs",{"filePath":"24","messages":"25","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"29"},"/home/hussain/Documents/redux-veranda-task/src/index.js",[],"/home/hussain/Documents/redux-veranda-task/src/App.js",["45","46","47","48","49","50","51","52","53","54","55"],"import React, { Component } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport IBPS_Pic from './assets/img/ibps-exam.jpg'\nimport Economic from './assets/img/economic.jpg'\nimport FinanceMarket from './assets/img/finance-market.jpg'\nimport FinanceService from './assets/img/finance-service.jpg'\nimport Statistic from './assets/img/statistics.jpg'\nimport DataAnalysis from './assets/img/data-analysis.jpg'\nimport Accountant from './assets/img/accountant.jpg'\nimport GST from './assets/img/gst.jpg'\nimport MarketTrend from './assets/img/market-trend.jpg'\nimport Provider1 from './assets/img/provider1.jpg'\nimport { Link } from \"react-router-dom\";\n// import AddCourse from './AddCourse';\nimport { connect } from 'react-redux'\nimport { category } from './redux';\n\nclass App extends Component {\n    constructor(props){\n      super(props);\n\n        this.state = {\n          // courses : [\n          //   { \n          //       id : 1,\n          //       dataCategory : \"IBPS Exams\",\n          //       dataLevel : \"Beginner\",\n          //       dataPrice : \"Free\",\n          //       dataLanguage : \"English,Tamil,Hindi\",\n          //       dataSort : \"Popular\",\n          //       className : \"course-box\",\n          //       firstChildClass : \"course-img\",\n          //       img_url:IBPS_Pic,\n          //       courseName : 'Veranda IBPS Exam Online Coaching Class',\n          //       courseDesc : 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.',\n          //       courseProviderName : 'David Warner',\n          //       courseTotalLesson : 20,\n          //       courseAvailableLang : 'English,Tamil,Hindi',\n          //       courseProviderImg :  Provider1,\n          //       dataCourseAmt : 7500,\n          //   },\n          //   { \n          //     id : 2,\n          //     dataCategory : \"Finance Services\",\n          //     dataLevel : \"Intermediate\",\n          //     dataPrice : \"Paid\",\n          //     dataLanguage : \"English,Tamil,Hindi\",\n          //     dataSort : \"Popular\",\n          //     className : \"course-box\",\n          //     firstChildClass : \"course-img\",\n          //     img_url:FinanceService,\n          //     courseName : 'Veranda Finance service Class',\n          //     courseDesc : 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.',\n          //     courseProviderName : 'David Warner',\n          //     courseTotalLesson : 18,\n          //     courseAvailableLang : 'English,Tamil,Hindi',\n          //     courseProviderImg :  Provider1,\n          //     dataCourseAmt : 5500,\n          //   },\n          //   { \n          //     id : 3,\n          //     dataCategory : \"Finance Markets\",\n          //     dataLevel : \"Expert\",\n          //     dataPrice : \"Free\",\n          //     dataLanguage : \"English,Tamil,Hindi,Malayalam\",\n          //     dataSort : \"Popular\",\n          //     className : \"course-box\",\n          //     firstChildClass : \"course-img\",\n          //     img_url:FinanceMarket,\n          //     courseName : 'Veranda Finance Market Online Class',\n          //     courseDesc : 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.',\n          //     courseProviderName : 'David Warner',\n          //     courseTotalLesson : 25,\n          //     courseAvailableLang : 'English,Tamil,Hindi,Malayalam',\n          //     courseProviderImg :  Provider1,\n          //     dataCourseAmt : 5500,\n          //   },\n          //   { \n          //     id : 4,\n          //     dataCategory : \"Economics\",\n          //     dataLevel : \"Expert\",\n          //     dataPrice : \"Paid\",\n          //     dataLanguage : \"English,Tamil,Telugu\",\n          //     dataSort : \"Popular\",\n          //     className : \"course-box\",\n          //     firstChildClass : \"course-img\",\n          //     img_url:Economic,\n          //     courseName : 'Veranda Economic Online Class',\n          //     courseDesc : 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.',\n          //     courseProviderName : 'David Warner',\n          //     courseTotalLesson : 25,\n          //     courseAvailableLang : 'English,Tamil,Telugu',\n          //     courseProviderImg :  Provider1,\n          //     dataCourseAmt : 5500,\n          //   },\n          //   { \n          //     id : 5,\n          //     dataCategory : \"Statistics\",\n          //     dataLevel : \"Expert\",\n          //     dataPrice : \"Paid\",\n          //     dataLanguage : \"English\",\n          //     dataSort : \"Popular\",\n          //     className : \"course-box\",\n          //     firstChildClass : \"course-img\",\n          //     img_url:Statistic,\n          //     courseName : 'Veranda Statistcis Online Class',\n          //     courseDesc : 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.',\n          //     courseProviderName : 'David Warner',\n          //     courseTotalLesson : 25,\n          //     courseAvailableLang : 'English',\n          //     courseProviderImg :  Provider1,\n          //     dataCourseAmt : 5500,\n          //   },\n          //   { \n          //     id : 6,\n          //     dataCategory : \"Data Analysis\",\n          //     dataLevel : \"Expert\",\n          //     dataPrice : \"Paid\",\n          //     dataLanguage : \"Hindi\",\n          //     dataSort : \"Popular\",\n          //     className : \"course-box\",\n          //     firstChildClass : \"course-img\",\n          //     img_url:DataAnalysis,\n          //     courseName : 'Veranda Data Analysis Online Class',\n          //     courseDesc : 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.',\n          //     courseProviderName : 'David Warner',\n          //     courseTotalLesson : 25,\n          //     courseAvailableLang : 'Hindi',\n          //     courseProviderImg :  Provider1,\n          //     dataCourseAmt : 5500,\n          //   },\n          //   { \n          //     id : 7,\n          //     dataCategory : \"Accountant\",\n          //     dataLevel : \"Expert\",\n          //     dataPrice : \"Paid\",\n          //     dataLanguage : \"Tamil\",\n          //     dataSort : \"Popular\",\n          //     className : \"course-box\",\n          //     firstChildClass : \"course-img\",\n          //     img_url:Accountant,\n          //     courseName : 'Veranda Accountant Online Class',\n          //     courseDesc : 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.',\n          //     courseProviderName : 'David Warner',\n          //     courseTotalLesson : 25,\n          //     courseAvailableLang : 'Tamil',\n          //     courseProviderImg :  Provider1,\n          //     dataCourseAmt : 5500,\n          //   },\n          //   { \n          //     id : 8,\n          //     dataCategory : \"GST\",\n          //     dataLevel : \"Expert\",\n          //     dataPrice : \"Paid\",\n          //     dataLanguage : \"Tamil,Malayalam\",\n          //     dataSort : \"Popular\",\n          //     className : \"course-box\",\n          //     firstChildClass : \"course-img\",\n          //     img_url: GST,\n          //     courseName : 'Veranda GST Online Class',\n          //     courseDesc : 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.',\n          //     courseProviderName : 'David Warner',\n          //     courseTotalLesson : 25,\n          //     courseAvailableLang : 'Tamil,Malayalam',\n          //     courseProviderImg :  Provider1,\n          //     dataCourseAmt : 5500,\n          //   },\n          //   { \n          //     id : 9,\n          //     dataCategory : \"Market Trend\",\n          //     dataLevel : \"Expert\",\n          //     dataPrice : \"Free\",\n          //     dataLanguage : \"Tamil,Telugu\",\n          //     dataSort : \"Popular\",\n          //     className : \"course-box\",\n          //     firstChildClass : \"course-img\",\n          //     img_url: MarketTrend,\n          //     courseName : 'Veranda Market Trend Online Class',\n          //     courseDesc : 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.',\n          //     courseProviderName : 'David Warner',\n          //     courseTotalLesson : 25,\n          //     courseAvailableLang : 'Tamil,Telugu',\n          //     courseProviderImg :  Provider1,\n          //     dataCourseAmt : 5500,\n          //   },\n          //   { \n          //     id : 10,\n          //     dataCategory : \"IBPS Exams\",\n          //     dataLevel : \"Intermediate\",\n          //     dataPrice : \"Paid\",\n          //     dataLanguage : \"Tamil,English\",\n          //     dataSort : \"Popular\",\n          //     className : \"course-box\",\n          //     firstChildClass : \"course-img\",\n          //     img_url:IBPS_Pic,\n          //     courseName : 'Veranda IBPS Exam Online Coaching Class',\n          //     courseDesc : 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.',\n          //     courseProviderName : 'David Warner',\n          //     courseTotalLesson : 20,\n          //     courseAvailableLang : 'English,Tamil',\n          //     courseProviderImg :  Provider1,\n          //     dataCourseAmt : 7500,\n          // },\n          // ],\n          categoryFilterCourse : [],\n          FinalCourseList : [],\n          category_list : [\n            {\n              id : 'all',\n              label : 'All',\n              value : true\n            },\n            {\n              id : 'ibps_exams',\n              label : 'IBPS Exams',\n              value : false\n            },\n            {\n              id : 'finance_markets',\n              label : 'Finance Markets',\n              value : false\n            },\n            {\n              id : 'economics',\n              label : 'Economics',\n              value : false\n            },\n            {\n              id : 'finance_services',\n              label : 'Finance Services',\n              value : false\n            },\n            {\n              id : 'statistics',\n              label : 'Statistics',\n              value : false\n            },\n            {\n              id : 'data_analysis',\n              label : 'Data Analysis',\n              value : false\n            },\n            {\n              id : 'accountant',\n              label : 'Accountant',\n              value : false\n            },\n            {\n              id : 'gst',\n              label : 'GST',\n              value : false\n            },\n            {\n              id : 'market_trend',\n              label : 'Market Trend',\n              value : false\n            },\n          ],\n          level_list : [\n            {\n              id : 'beginner',\n              label : 'Beginner',\n              value : false\n            },\n            {\n              id : 'intermediate',\n              label : 'Intermediate',\n              value : false\n            },\n            {\n              id : 'expert',\n              label : 'Expert',\n              value : false\n            },\n          ],\n          price_list : [\n            {\n              id : 'free',\n              label : 'Free',\n              value : false\n            },\n            {\n              id : 'paid',\n              label : 'Paid',\n              value : false\n            },\n          ],\n          language_list : [\n            {\n              id : 'tamil',\n              label : 'Tamil',\n              value : false\n            },\n            {\n              id : 'english',\n              label : 'English',\n              value : false\n            },\n            {\n              id : 'malayalam',\n              label : 'Malayalam',\n              value : false\n            },\n            {\n              id : 'hindi',\n              label : 'Hindi',\n              value : false\n            },\n            {\n              id : 'telugu',\n              label : 'Telugu',\n              value : false\n            },\n          ],\n          filtered_list : [],\n          checkTrueCategory : [],\n          checkTrueLevel : [],\n          checkTruePrice : [],\n          checkTrueLang : []\n        }\n    }\n\n    componentDidMount(){\n\n        let checkTrueCategory = this.checkTrueCategory()\n        // console.log('checkTrueCategory',checkTrueCategory)\n        this.setState({\n            checkTrueCategory : checkTrueCategory\n        },()=> {\n            this.combiningFilter()\n        })\n        // let added_course = JSON.parse(JSON.stringify(this.props.location.state));\n        // let added_course = {\n        //   ...this.props.location.state\n        // };\n        // console.log('addedCourse',added_course)\n\n        // if(added_course['courseName'] !== ''){\n        //   this.state.courses.push(added_course)\n        // }\n\n    }\n\n    categoryFilter = (e) => {\n      // console.log(e.target.nextSibling.textContent,e.target.checked)\n\n      let selected_category = e.target.nextSibling.textContent\n\n      let value = e.target.checked\n\n      this.setState(prevState => ({\n          category_list : prevState.category_list.map(\n            (el,key) =>  el.label === selected_category ? {\n              ...el,\n              value : value\n            }\n            : \n            el\n          ) \n      }),() => {\n          if(selected_category !== 'All'){\n              this.setState(prevState => ({\n                category_list : prevState.category_list.map(\n                  (el,key) =>  (el.label === 'All' && el.value === true) ? {\n                    ...el,\n                    value : false\n                  }\n                  : \n                  el\n                ) ,\n                filtered_list : []\n            }),() => {\n              // console.log(this.state.category_list)\n\n              let checkTrueCategory = this.checkTrueCategory()\n\n              // console.log('checkTrueCategory',checkTrueCategory)\n\n              this.setState({\n                  checkTrueCategory : checkTrueCategory\n              },() => {\n                  this.combiningFilter()\n              })\n            })\n          }\n          else{\n            this.setState(prevState => ({\n                category_list : prevState.category_list.map(\n                  (el,key) => (el.label !== 'All') ? {\n                    ...el,\n                    value : false\n                  }\n                  : \n                  el\n                ) ,\n            }),() => {\n              // console.log(this.state.category_list)\n\n              let checkTrueCategory = this.checkTrueCategory()\n              \n              // console.log('checkTrueCategory',checkTrueCategory)\n\n              this.setState({\n                checkTrueCategory : checkTrueCategory\n              },() => {\n                  this.combiningFilter()\n              })\n            })\n          }\n      })\n    } \n\n    checkTrueCategory(){\n        let category_list = this.state.category_list\n        \n        let category_true_list = []\n\n        category_list.map((item,key) => (item.value) ? category_true_list.push(item) : '')\n      \n        return category_true_list;\n    }\n\n\n    levelFilter = (e) => {\n      // console.log(e.target.nextSibling.textContent,e.target.checked)\n\n      let selected_category = e.target.nextSibling.textContent\n\n      let value = e.target.checked\n      \n      this.setState(prevState => ({\n          level_list : prevState.level_list.map(\n            el => el.label === selected_category ? {\n              ...el,\n              value : value\n            }\n            : \n            el\n          ) \n      }),() => {\n        // console.log(this.state.level_list)\n        let checkTrueLevel = this.checkTrueLevel()\n        \n        // console.log('checkTrueLevel',checkTrueLevel)\n\n        this.setState({\n            checkTrueLevel : checkTrueLevel\n        },()=>{\n            this.combiningFilter()\n        })\n\n      })\n    }\n\n\n    checkTrueLevel(){\n        let level_list = this.state.level_list\n          \n        let level_true_list = []\n\n        level_list.map((item,key) => (item.value) ? level_true_list.push(item) : '' )\n        \n        return level_true_list;\n    }\n\n    \n\n    priceFilter = (e) => {\n      // console.log(e.target.nextSibling.textContent,e.target.checked)\n\n      let selected_category = e.target.nextSibling.textContent\n  \n      let value = e.target.checked\n        \n      this.setState(prevState => ({\n          price_list : prevState.price_list.map(\n            el => el.label === selected_category ? {\n              ...el,\n              value : value\n            }\n            : \n            el\n          ) \n      }),() => {\n        // console.log(this.state.price_list)\n\n        let checkTruePrice = this.checkTruePrice()\n\n        this.setState({\n            checkTruePrice : checkTruePrice\n        },()=> {\n           this.combiningFilter()\n        })\n      })\n    }\n\n    checkTruePrice(){\n      let price_list = this.state.price_list\n          \n      let price_true_list = []\n\n      price_list.map((item,key) => (item.value) ? price_true_list.push(item) : '' )\n      \n      return price_true_list;\n    }\n\n\n    languageFilter = (e) => {\n        console.log(e.target.nextSibling.textContent,e.target.checked)\n\n        let selected_category = e.target.nextSibling.textContent\n\n        let value = e.target.checked\n        \n        this.setState(prevState => ({\n            language_list : prevState.language_list.map(\n              el => el.label === selected_category ? {\n                ...el,\n                value : value\n              }\n              : \n              el\n            ) \n        }),() => {\n          // console.log(this.state.language_list)\n\n          let checkTrueLang = this.checkTrueLang()\n\n          this.setState({\n              checkTrueLang : checkTrueLang\n          },()=> {\n            this.combiningFilter()\n          })\n        })\n    }\n\n    checkTrueLang(){\n        let language_list = this.state.language_list\n            \n        let lang_true_list = []\n\n        language_list.map((item,key) => (item.value) ? lang_true_list.push(item) : '' )\n        \n        return lang_true_list;\n    }\n\n    combiningFilter(){\n        let category = this.state.checkTrueCategory\n\n        let level = this.state.checkTrueLevel\n\n        let price = this.state.checkTruePrice\n\n        let lang = this.state.checkTrueLang\n\n        let combinedArray = []\n\n        combinedArray.push(...category,...level,...price,...lang)\n\n        // console.log('combinedArray',combinedArray)\n\n        this.setFilterData(combinedArray)\n    }\n\n    setFilterData(data){\n        this.setState({\n            filtered_list : data\n        },() => {\n          this.showCourses()\n        })\n    }\n\n\n    showCourses(){\n\n      // console.log('this.props.course',this.props.course_list)\n\n      let filtered_item = this.state.filtered_list\n\n      // let overall_course_list = this.state.courses\n\n      let overall_course_list = this.props.course_list.courses\n\n      let category_wise_course = []\n\n      let level_wise_course = []\n\n      let price_wise_course = []\n\n      let lang_wise_course = []\n\n      let removeDuplicates = []\n\n      let temp_obj = {}\n\n      for (let index = 0; index < filtered_item.length; index++) {\n          for(let i=0;i<overall_course_list.length;i++){\n              if(filtered_item[index].label === 'All'){\n                  category_wise_course.push(overall_course_list[i])\n              }\n              else{\n                if(filtered_item[index].label === overall_course_list[i].dataCategory){\n                    category_wise_course.push(overall_course_list[i])\n                }\n              }   \n          }\n      }\n\n      // console.log('category_wise_course',category_wise_course)\n\n      for(let index = 0;index < filtered_item.length;index++){\n        if(price_wise_course.length > 0){\n            for(let i =0;i<price_wise_course.length;i++){\n                if(filtered_item[index].label === price_wise_course[i].dataLevel){\n                    level_wise_course.push(price_wise_course[i])\n                }\n            }\n        }\n        else if(removeDuplicates.length > 0){\n            for(let i =0; i<removeDuplicates.length;i++){\n                if(filtered_item[index].label === removeDuplicates[i].dataLevel){\n                    level_wise_course.push(removeDuplicates[i])\n                }\n            }\n        }\n        else{\n            for(let i =0;i<category_wise_course.length;i++){\n                if(filtered_item[index].label === category_wise_course[i].dataLevel){\n                    level_wise_course.push(category_wise_course[i])\n                }\n            }\n        }\n          \n      }\n\n      // console.log('level_wise_course',level_wise_course)\n\n      for(let index = 0;index < filtered_item.length;index++){\n        if(level_wise_course.length > 0){\n            for(let i =0; i<level_wise_course.length;i++){\n                if(filtered_item[index].label === level_wise_course[i].dataPrice){\n                    price_wise_course.push(level_wise_course[i])\n                }\n            }\n        }\n        else if(removeDuplicates.length > 0){\n          for(let i =0; i<removeDuplicates.length;i++){\n              if(filtered_item[index].label === removeDuplicates[i].dataPrice){\n                  price_wise_course.push(removeDuplicates[i])\n              }\n          }\n        }\n        else{\n            for(let i =0; i<category_wise_course.length;i++){\n                if(filtered_item[index].label === category_wise_course[i].dataPrice){\n                    price_wise_course.push(category_wise_course[i])\n                }\n            }\n        }  \n      }\n      // console.log('price_wise_course',price_wise_course)\n\n      for(let index =0;index<filtered_item.length;index++){\n          if(level_wise_course.length > 0){\n              if(price_wise_course.length > 0){\n                  for(let i=0;i<price_wise_course.length ;i++){\n                    var str = price_wise_course[i].dataLanguage\n                    if(str.indexOf(filtered_item[index].label) !== -1){\n                        lang_wise_course.push(price_wise_course[i])\n                    } \n                  }\n              }\n              else{\n                for(let i=0;i<level_wise_course.length ;i++){\n                    var str1 = level_wise_course[i].dataLanguage\n                    if(str1.indexOf(filtered_item[index].label) !== -1){\n                      lang_wise_course.push(level_wise_course[i])\n                    } \n                }\n              }\n          }\n          else if(price_wise_course.length > 0){\n            for(let i=0;i<price_wise_course.length ;i++){\n              var str3 = price_wise_course[i].dataLanguage\n              if(str3.indexOf(filtered_item[index].label) !== -1){\n                  lang_wise_course.push(price_wise_course[i])\n              } \n            }\n          }\n          else{\n            for(let i=0;i<category_wise_course.length ;i++){\n                var str2 = category_wise_course[i].dataLanguage\n                if(str2.indexOf(filtered_item[index].label) !== -1){\n                  lang_wise_course.push(category_wise_course[i])\n                } \n            }\n          }\n      }\n\n      // console.log('language wise course',lang_wise_course)\n\n      if(lang_wise_course.length > 0){\n          for(let i =0;i<lang_wise_course.length;i++){\n              let objTitle = lang_wise_course[i].id\n              temp_obj[objTitle] = lang_wise_course[i]\n          }\n          // console.log(temp_obj)\n          for(let item in temp_obj){\n              removeDuplicates.push(temp_obj[item])\n          }\n      }\n\n      // console.log('to-check',removeDuplicates.length > 0 ? removeDuplicates : price_wise_course.length > 0 ? price_wise_course : level_wise_course.length > 0 ? level_wise_course : category_wise_course)\n\n      this.props.courseFilter(removeDuplicates.length > 0 ? removeDuplicates : price_wise_course.length > 0 ? price_wise_course : level_wise_course.length > 0 ? level_wise_course : category_wise_course)\n      // console.log('removeDuplicates',removeDuplicates)\n    \n      // this.setState({\n      //     FinalCourseList : removeDuplicates.length > 0 ? removeDuplicates : price_wise_course.length > 0 ? price_wise_course : level_wise_course.length > 0 ? level_wise_course : category_wise_course\n      // })\n  }\n\n\n    render() {\n        const { FinalCourseList,category_list,level_list,price_list,language_list } = this.state;\n        return (\n          <>\n              <section className='row my-4'>\n                  <div className='col-md-3'>\n                      <div>\n                          <h5 className='filter-heading'>\n                            Category\n                            <span className='bottom-line'>\n                              <span className='bottom-green-line'></span>\n                            </span>\n                          </h5>\n                          <ul className='p-0'>\n                              {\n                                category_list.map((item,key) => {\n                                    return (\n                                        <>\n                                            <li id={key}>\n                                                <Form.Group controlId={item.id}>\n                                                  <Form.Check id={item.id} type='checkbox' label={item.label}\n                                                      checked={(item.value === true) ? true : false }\n                                                    onChange={this.categoryFilter}\n                                                  />\n                                                </Form.Group>\n                                            </li>\n                                        </>\n                                    );\n                                })\n                              }\n                          </ul>\n                      </div>\n                      <div>\n                          <h5 className='filter-heading'>\n                            Level\n                            <span className='bottom-line'>\n                              <span className='bottom-green-line'></span>\n                            </span>\n                          </h5>\n                          <ul className='p-0'>\n                            {\n                                level_list.map((item,key) => {\n                                    return (\n                                        <>\n                                            <li id={key}>\n                                                <Form.Group controlId={item.id}>\n                                                  <Form.Check id={item.id} type='checkbox' label={item.label}\n                                                      checked={(item.value === true) ? true : false }\n                                                    onChange={this.levelFilter}\n                                                  />\n                                                </Form.Group>\n                                            </li>\n                                        </>\n                                    );\n                                })\n                              }\n                            \n                          </ul>\n                      </div>\n                      <div>\n                          <h5 className='filter-heading'>\n                            Price\n                            <span className='bottom-line'>\n                              <span className='bottom-green-line'></span>\n                            </span>\n                          </h5>\n                          <ul className='p-0'>\n                              {\n                                price_list.map((item,key) => {\n                                    return (\n                                        <>\n                                            <li id={key}>\n                                                <Form.Group controlId={item.id}>\n                                                  <Form.Check id={item.id} type='checkbox' label={item.label}\n                                                      checked={(item.value === true) ? true : false }\n                                                    onChange={this.priceFilter}\n                                                  />\n                                                </Form.Group>\n                                            </li>\n                                        </>\n                                    );\n                                })\n                              }\n                          </ul>\n                      </div>\n                      <div>\n                          <h5 className='filter-heading'>\n                            Language\n                            <span className='bottom-line'>\n                              <span className='bottom-green-line'></span>\n                            </span>\n                          </h5>\n                          <ul className='p-0'>\n                              {\n                                language_list.map((item,key) => {\n                                    return (\n                                        <>\n                                            <li id={key}>\n                                                <Form.Group controlId={item.id}>\n                                                  <Form.Check id={item.id} type='checkbox' label={item.label}\n                                                      checked={(item.value === true) ? true : false }\n                                                    onChange={this.languageFilter}\n                                                  />\n                                                </Form.Group>\n                                            </li>\n                                        </>\n                                    );\n                                })\n                              }\n                          </ul>\n                      </div>\n                  </div>\n                  <div className='col-md-9'>\n                  \n                    <Link className='outline-primary btn btn-primary' to='/add-course'>\n                          Add Course\n                    </Link>\n                  \n                    \n                    <ul className='p-0 d-flex flex-wrap'>\n                        {\n                          this.props.hasOwnProperty(\"course_list\") ? \n                            this.props.course_list.FinalCourseList.length > 0  ? this.props.course_list.FinalCourseList.map((item,key) => {\n                              return (\n                                  <>\n                                      <li id={key} data-id={item.id} data-category={item.dataCategory} \n                                          data-sort={item.dataSort} data-level = {item.dataLevel} data-price = {item.dataPrice}\n                                          data-language = {item.dataLanguage}\n                                          className={item.className}>\n                                          <div className={item.firstChildClass}>\n                                              <img src={item.img_url} alt=\"pic\" className='shadow-sm w-100'/>\n                                              <div className='price-bg'>\n                                                  <p className='mb-0'>{(item.dataPrice === 'Free') ?  'Free' : `Rs ${item.dataCourseAmt}`  }</p>\n                                              </div>\n                                          </div>\n                                          <div className='course-tot-info'>\n                                              <div className='provider-info'>\n                                                  <div className='provider-img'>\n                                                    <img src={item.courseProviderImg} alt=\"pic\" className='shadow-sm w-100'/>\n                                                  </div>\n                                                  <div className='ml-3'>\n                                                      <p className='mb-0'>{item.courseProviderName}</p>\n\n                                                      <div>\n                                                        <p className='mb-0 d-flex flex-wrap'>\n                                                          {item.courseTotalLesson} Lessons \n                                                            <span className='separator mx-2'></span>\n                                                          {item.courseAvailableLang}\n                                                        </p>\n                                                      </div>\n                                                  </div>\n                                              </div>\n                                              <h3 className='course-name'>{item.courseName}</h3>\n                                              <p className='course-desc mb-0'>\n                                                {item.courseDesc}\n                                              </p>\n                                              <div className='btn-sec my-3'>\n                                                <Button variant=\"success\">\n                                                    Purchase Now\n                                                </Button>\n                                                <Button variant=\"outline-success\">\n                                                    Get Information\n                                                </Button>\n                                              </div>\n                                          </div>\n                                          \n                                      </li>\n                                  </>\n                              );\n                            }) : ''\n                            : ''\n                        }\n                      </ul>\n                  </div>\n              </section>   \n              \n          </>\n          \n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n  console.log('state.course.FinalCourseList',state.course.FinalCourseList)\n  return {\n      course_list : state.course\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      courseFilter : (selected_course_list) => dispatch(category(selected_course_list))\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);","/home/hussain/Documents/redux-veranda-task/src/reportWebVitals.js",[],["56","57"],"/home/hussain/Documents/redux-veranda-task/src/redux/index.js",[],"/home/hussain/Documents/redux-veranda-task/src/redux/course/courseAction.js",[],"/home/hussain/Documents/redux-veranda-task/src/redux/course/courseType.js",[],"/home/hussain/Documents/redux-veranda-task/src/redux/store.js",[],"/home/hussain/Documents/redux-veranda-task/src/redux/rootReducer.js",[],"/home/hussain/Documents/redux-veranda-task/src/redux/course/courseReducer.js",[],"/home/hussain/Documents/redux-veranda-task/src/AddCourse.js",["58","59"],"import React, { Component } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Link,withRouter } from 'react-router-dom';\nimport { addNewCourse } from './redux';\n\nclass AddCourse extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            category_option : [\n                {\n                    id : 1,\n                    value : 'IBPS Exams'\n                },\n                {\n                    id : 2,\n                    value : 'Finance Markets'\n                },\n                {\n                    id : 3,\n                    value : 'Economics'\n                },\n                {\n                    id : 4,\n                    value : 'Finance Services'\n                },\n                {\n                    id : 5,\n                    value : 'Statistics'\n                },\n                {\n                    id : 6,\n                    value : 'Data Analysis'\n                },\n                {\n                    id : 7,\n                    value : 'Accountant'\n                },\n                {\n                    id : 8,\n                    value : 'GST'\n                },\n                {\n                    id : 9,\n                    value : 'Market Trend'\n                },\n            ],\n            level_option : [\n                {\n                    id : 1,\n                    value : 'Beginner'\n                },\n                {\n                    id : 2,\n                    value : 'Intermediate'\n                },\n                {\n                    id : 3,\n                    value : 'Expert'\n                },\n            ],\n            price_option : [\n                {\n                    id : 1,\n                    value : 'Free'\n                },\n                {\n                    id : 2,\n                    value : 'Paid'\n                }\n            ],\n            amount : '',\n            languages_option : [\n                {\n                    id : 1,\n                    value : 'Tamil'\n                },\n                {\n                    id : 2,\n                    value : 'English'\n                },\n                {\n                    id : 3,\n                    value : 'Hindi'\n                },\n                {\n                    id : 4,\n                    value : 'Malayalam'\n                },\n                {\n                    id : 5,\n                    value : 'Telugu'\n                },\n            ],\n            setPrice : false,\n            priceValue : 'Free',\n            categoryValue : 'IBPS Exams',\n            levelValue : 'Beginner',\n            langvalue : [],\n            setUploaderName : '',\n            setTotalLesson : '',\n            setCourseName : '',\n            setCourseDesc : '',\n            setCourseImg : '',\n            setProviderImg : '',\n            temp_obj : {\n                id : '',\n                dataCategory : '',\n                dataLevel : '',\n                dataPrice : \"\",\n                dataLanguage : \"\",\n                dataSort : \"Popular\",\n                className : \"course-box\",\n                firstChildClass : \"course-img\",\n                img_url:'',\n                courseName : '',\n                courseDesc : '',\n                courseProviderName : '',\n                courseTotalLesson : '',\n                courseAvailableLang : '',\n                courseProviderImg : '' ,\n                dataCourseAmt : '',\n            }\n        }\n    }\n\n    setPrice = (e) => {\n        // console.log(e.target.value)\n        let price = e.target.value\n        this.setState({\n            priceValue : price\n        },()=> {\n            if(price === 'Paid'){\n                this.setState({\n                    setPrice : true\n                })\n            }\n            else{\n                this.setState({\n                    setPrice : false\n                })\n            }\n        })\n    }\n    setLevel = (e) => {\n        // console.log(e.target.value)\n        let level = e.target.value\n        this.setState({\n            levelValue : level\n        })\n    }\n    setCategory = (e) => {\n        // console.log(e.target.value)\n        let category = e.target.value\n        this.setState({\n            categoryValue : category\n        })\n    }\n\n    setAmount = (e) => {\n        let amount = e.target.value\n        this.setState({\n            amount : amount\n        })\n    }\n\n    setLanguage = (e) => {\n        // console.log(e.target.options)\n        let options = e.target.options\n        let value = []\n\n        for (let i = 0;i < options.length;i++) {\n            if (options[i].selected) {\n                value.push(options[i].value);\n            }\n        }\n        // console.log('val',value.toString())\n        this.setState({\n            langvalue : value\n        })\n    }\n\n    setUploaderName = (e) => {\n        let name = e.target.value\n        this.setState({\n            setUploaderName : name\n        })\n    }\n\n    setTotalLesson = (e) => {\n        let count = e.target.value\n        this.setState({\n            setTotalLesson : count\n        })\n    }\n\n    setCourseName = (e) => {\n        let name = e.target.value\n        this.setState({\n            setCourseName : name\n        })\n    }\n\n    setCourseDesc = (e) => {\n        let paragraph = e.target.value\n        this.setState({\n            setCourseDesc : paragraph\n        })\n    }\n\n    setCourseImg = (e) => {\n        console.log(e.target.files[0])\n        let filename = URL.createObjectURL(e.target.files[0])\n        this.setState({\n            setCourseImg : filename\n        })\n    }\n\n    setProviderImg = (e) => {\n        console.log(e.target.files[0])\n        let filename = URL.createObjectURL(e.target.files[0])\n        this.setState({\n            setProviderImg : filename\n        })\n    }\n\n    addCourse = (e) => {\n        e.preventDefault()\n\n        let language = this.state.langvalue.toString()\n        this.setState(prevState => ({\n            temp_obj: {                   // object that we want to update\n                ...prevState.temp_obj,    // keep all other key-value pairs\n                id : this.props.course_count + 1,\n                dataCategory : this.state.categoryValue,\n                dataLevel : this.state.levelValue,\n                dataPrice : this.state.priceValue,\n                dataLanguage : language,\n                dataSort : \"Popular\",\n                className : \"course-box\",\n                firstChildClass : \"course-img\",\n                img_url:this.state.setCourseImg,\n                courseName : this.state.setCourseName,\n                courseDesc : this.state.setCourseDesc,\n                courseProviderName : this.state.setUploaderName,\n                courseTotalLesson : this.state.setTotalLesson,\n                courseAvailableLang : language,\n                courseProviderImg :  this.state.setProviderImg,\n                dataCourseAmt : this.state.amount,       // update the value of specific key\n            }\n        }),()=> {\n            console.log(this.state.temp_obj)\n            \n            this.props.history.push({\n                pathname: '/',\n                // state: this.state.temp_obj\n            });\n            this.props.newCourse(this.state.temp_obj)\n\n        })\n        // console.log(this.state.categoryValue,this.state.levelValue,this.state.priceValue,\n        //     this.state.amount,this.state.langvalue,this.state.setUploaderName,this.state.setCourseDesc,\n        //     this.state.setCourseName,this.state.setTotalLesson)\n\n    }\n\n    render() {\n         const { category_option,level_option,price_option,setPrice,amount,temp_obj,\n                languages_option,setUploaderName,setTotalLesson,setCourseName,setCourseDesc } = this.state\n        return (\n            <>\n               <section className='row my-4 justify-content-center align-items-center'>\n                    <div className='col-md-8'>\n                        <div className='card'>\n                            <div className='card-header'>\n                                Add course\n                            </div>\n                            <div className='card-body'>\n                                <Form onSubmit={this.addCourse}>\n                                    <Form.Group controlId=\"category\">\n                                        <Form.Label>Select Category</Form.Label>\n                                        <Form.Control as=\"select\" onChange={this.setCategory} value={ this.state.categoryValue }>\n                                            {\n                                                category_option.map((item,key) => {\n                                                    return (\n                                                        <>\n                                                            <option id={key} value={item.value}>{item.value}</option>\n                                                        </>   \n                                                    )\n                                                })\n                                            }                                           \n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    <Form.Group controlId=\"level\">\n                                        <Form.Label>Select Level</Form.Label>\n                                        <Form.Control as=\"select\" onChange={this.setLevel} value={ this.state.levelValue }>\n                                            {\n                                                level_option.map((item,key) => {\n                                                    return (\n                                                        <>\n                                                            <option id={key} value={item.value}>{item.value}</option>\n                                                        </>   \n                                                    )\n                                                })\n                                            }                                           \n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    <Form.Group controlId=\"price\">\n                                        <Form.Label>Select Price</Form.Label>\n                                        <Form.Control as=\"select\" onChange={this.setPrice} value={ this.state.priceValue }>\n                                            {\n                                                price_option.map((item,key) => {\n                                                    return (\n                                                        <>\n                                                            <option id={key} value={item.value}>{item.value}</option>\n                                                        </>   \n                                                    )\n                                                })\n                                            }                                           \n                                        </Form.Control>\n                                    </Form.Group>\n                                    {\n                                        setPrice ? \n                                        <Form.Group>  \n                                            <Form.Control type=\"number\" value={amount} onChange={this.setAmount} placeholder=\"Enter Price Here\" />\n                                        </Form.Group> : ''\n                                    }\n\n                                    <Form.Group controlId=\"language\">\n                                        <Form.Label>Select Languages</Form.Label>\n                                        <Form.Control as=\"select\" onChange={this.setLanguage} value={ this.state.langvalue } multiple>\n                                            {\n                                                languages_option.map((item,key) => {\n                                                    return (\n                                                        <>\n                                                            <option id={key} value={item.value}>{item.value} </option>\n                                                        </>   \n                                                    )\n                                                })\n                                            }                                           \n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    \n                                    <Form.Group>  \n                                        <Form.Label>Uploader Name</Form.Label>\n                                        <Form.Control type=\"text\"  onChange={this.setUploaderName} value={setUploaderName} placeholder=\"Enter Course Uploaded Person name\" />\n                                    </Form.Group>\n                                    <Form.Group>  \n                                        <Form.Label>Total Lessons</Form.Label>\n                                        <Form.Control type=\"number\" onChange={this.setTotalLesson} value={setTotalLesson} placeholder=\"Enter Course Total Lesson count\" />\n                                    </Form.Group>\n                                    <Form.Group>  \n                                        <Form.Label>Course Name</Form.Label>\n                                        <Form.Control type=\"text\" onChange={this.setCourseName} value={setCourseName}  placeholder=\"Enter Course name\" />\n                                    </Form.Group>\n                                    <Form.Group>  \n                                        <Form.Label>Course Description</Form.Label>\n                                        <Form.Control type=\"text\" onChange={this.setCourseDesc} value={setCourseDesc}  placeholder=\"Enter Course Description\" />\n                                    </Form.Group>\n\n                                    <Form.Group>\n                                        <Form.File id=\"course_img\" onChange={this.setCourseImg}  label=\"Select course image\" />\n                                    </Form.Group>\n\n                                    <Form.Group>\n                                        <Form.File id=\"course__provider_img\" onChange={this.setProviderImg}  label=\"Select course Provider image\" />\n                                    </Form.Group>\n\n\n                                    <Button variant='primary' type='submit'>\n                                        Submit\n                                    </Button>\n                                </Form>\n                            </div>\n                        </div>        \n                    </div>\n                </section>        \n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        course_count : state.course.courses.length\n    }\n}\n  \n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        newCourse : (new_course) => dispatch(addNewCourse(new_course))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withRouter(AddCourse));",{"ruleId":"60","severity":1,"message":"61","line":3,"column":8,"nodeType":"62","messageId":"63","endLine":3,"endColumn":16},{"ruleId":"60","severity":1,"message":"64","line":4,"column":8,"nodeType":"62","messageId":"63","endLine":4,"endColumn":16},{"ruleId":"60","severity":1,"message":"65","line":5,"column":8,"nodeType":"62","messageId":"63","endLine":5,"endColumn":21},{"ruleId":"60","severity":1,"message":"66","line":6,"column":8,"nodeType":"62","messageId":"63","endLine":6,"endColumn":22},{"ruleId":"60","severity":1,"message":"67","line":7,"column":8,"nodeType":"62","messageId":"63","endLine":7,"endColumn":17},{"ruleId":"60","severity":1,"message":"68","line":8,"column":8,"nodeType":"62","messageId":"63","endLine":8,"endColumn":20},{"ruleId":"60","severity":1,"message":"69","line":9,"column":8,"nodeType":"62","messageId":"63","endLine":9,"endColumn":18},{"ruleId":"60","severity":1,"message":"70","line":10,"column":8,"nodeType":"62","messageId":"63","endLine":10,"endColumn":11},{"ruleId":"60","severity":1,"message":"71","line":11,"column":8,"nodeType":"62","messageId":"63","endLine":11,"endColumn":19},{"ruleId":"60","severity":1,"message":"72","line":12,"column":8,"nodeType":"62","messageId":"63","endLine":12,"endColumn":17},{"ruleId":"60","severity":1,"message":"73","line":725,"column":17,"nodeType":"62","messageId":"63","endLine":725,"endColumn":32},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"60","severity":1,"message":"78","line":4,"column":10,"nodeType":"62","messageId":"63","endLine":4,"endColumn":14},{"ruleId":"60","severity":1,"message":"79","line":270,"column":76,"nodeType":"62","messageId":"63","endLine":270,"endColumn":84},"no-unused-vars","'IBPS_Pic' is defined but never used.","Identifier","unusedVar","'Economic' is defined but never used.","'FinanceMarket' is defined but never used.","'FinanceService' is defined but never used.","'Statistic' is defined but never used.","'DataAnalysis' is defined but never used.","'Accountant' is defined but never used.","'GST' is defined but never used.","'MarketTrend' is defined but never used.","'Provider1' is defined but never used.","'FinalCourseList' is assigned a value but never used.","no-native-reassign",["80"],"no-negated-in-lhs",["81"],"'Link' is defined but never used.","'temp_obj' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]